#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace linqtosql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="emyo")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertKisiler(Kisiler instance);
    partial void UpdateKisiler(Kisiler instance);
    partial void DeleteKisiler(Kisiler instance);
    partial void Insertiller(iller instance);
    partial void Updateiller(iller instance);
    partial void Deleteiller(iller instance);
    partial void Insertilceler(ilceler instance);
    partial void Updateilceler(ilceler instance);
    partial void Deleteilceler(ilceler instance);
    partial void Insertisimler(isimler instance);
    partial void Updateisimler(isimler instance);
    partial void Deleteisimler(isimler instance);
    partial void Insertdersler(dersler instance);
    partial void Updatedersler(dersler instance);
    partial void Deletedersler(dersler instance);
    partial void Insertiliskiler(iliskiler instance);
    partial void Updateiliskiler(iliskiler instance);
    partial void Deleteiliskiler(iliskiler instance);
    #endregion
		
		public dbDataContext() : 
				base(global::linqtosql.Properties.Settings.Default.emyoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Kisiler> Kisilers
		{
			get
			{
				return this.GetTable<Kisiler>();
			}
		}
		
		public System.Data.Linq.Table<iller> illers
		{
			get
			{
				return this.GetTable<iller>();
			}
		}
		
		public System.Data.Linq.Table<ilceler> ilcelers
		{
			get
			{
				return this.GetTable<ilceler>();
			}
		}
		
		public System.Data.Linq.Table<isimler> isimlers
		{
			get
			{
				return this.GetTable<isimler>();
			}
		}
		
		public System.Data.Linq.Table<dersler> derslers
		{
			get
			{
				return this.GetTable<dersler>();
			}
		}
		
		public System.Data.Linq.Table<iliskiler> iliskilers
		{
			get
			{
				return this.GetTable<iliskiler>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kisiler")]
	public partial class Kisiler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _kisiId;
		
		private string _ad;
		
		private string _soyad;
		
		private System.DateTime _dogum_tarihi;
		
		private string _il;
		
		private string _ilce;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnkisiIdChanging(int value);
    partial void OnkisiIdChanged();
    partial void OnadChanging(string value);
    partial void OnadChanged();
    partial void OnsoyadChanging(string value);
    partial void OnsoyadChanged();
    partial void Ondogum_tarihiChanging(System.DateTime value);
    partial void Ondogum_tarihiChanged();
    partial void OnilChanging(string value);
    partial void OnilChanged();
    partial void OnilceChanging(string value);
    partial void OnilceChanged();
    #endregion
		
		public Kisiler()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kisiId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int kisiId
		{
			get
			{
				return this._kisiId;
			}
			set
			{
				if ((this._kisiId != value))
				{
					this.OnkisiIdChanging(value);
					this.SendPropertyChanging();
					this._kisiId = value;
					this.SendPropertyChanged("kisiId");
					this.OnkisiIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ad", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ad
		{
			get
			{
				return this._ad;
			}
			set
			{
				if ((this._ad != value))
				{
					this.OnadChanging(value);
					this.SendPropertyChanging();
					this._ad = value;
					this.SendPropertyChanged("ad");
					this.OnadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soyad", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string soyad
		{
			get
			{
				return this._soyad;
			}
			set
			{
				if ((this._soyad != value))
				{
					this.OnsoyadChanging(value);
					this.SendPropertyChanging();
					this._soyad = value;
					this.SendPropertyChanged("soyad");
					this.OnsoyadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dogum_tarihi", DbType="DateTime NOT NULL")]
		public System.DateTime dogum_tarihi
		{
			get
			{
				return this._dogum_tarihi;
			}
			set
			{
				if ((this._dogum_tarihi != value))
				{
					this.Ondogum_tarihiChanging(value);
					this.SendPropertyChanging();
					this._dogum_tarihi = value;
					this.SendPropertyChanged("dogum_tarihi");
					this.Ondogum_tarihiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_il", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string il
		{
			get
			{
				return this._il;
			}
			set
			{
				if ((this._il != value))
				{
					this.OnilChanging(value);
					this.SendPropertyChanging();
					this._il = value;
					this.SendPropertyChanged("il");
					this.OnilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ilce", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ilce
		{
			get
			{
				return this._ilce;
			}
			set
			{
				if ((this._ilce != value))
				{
					this.OnilceChanging(value);
					this.SendPropertyChanging();
					this._ilce = value;
					this.SendPropertyChanged("ilce");
					this.OnilceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.iller")]
	public partial class iller : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ilId;
		
		private string _il_adi;
		
		private EntitySet<ilceler> _ilcelers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnilIdChanging(int value);
    partial void OnilIdChanged();
    partial void Onil_adiChanging(string value);
    partial void Onil_adiChanged();
    #endregion
		
		public iller()
		{
			this._ilcelers = new EntitySet<ilceler>(new Action<ilceler>(this.attach_ilcelers), new Action<ilceler>(this.detach_ilcelers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ilId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ilId
		{
			get
			{
				return this._ilId;
			}
			set
			{
				if ((this._ilId != value))
				{
					this.OnilIdChanging(value);
					this.SendPropertyChanging();
					this._ilId = value;
					this.SendPropertyChanged("ilId");
					this.OnilIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_il_adi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string il_adi
		{
			get
			{
				return this._il_adi;
			}
			set
			{
				if ((this._il_adi != value))
				{
					this.Onil_adiChanging(value);
					this.SendPropertyChanging();
					this._il_adi = value;
					this.SendPropertyChanged("il_adi");
					this.Onil_adiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iller_ilceler", Storage="_ilcelers", ThisKey="ilId", OtherKey="ilId")]
		public EntitySet<ilceler> ilcelers
		{
			get
			{
				return this._ilcelers;
			}
			set
			{
				this._ilcelers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ilcelers(ilceler entity)
		{
			this.SendPropertyChanging();
			entity.iller = this;
		}
		
		private void detach_ilcelers(ilceler entity)
		{
			this.SendPropertyChanging();
			entity.iller = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ilceler")]
	public partial class ilceler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ilceId;
		
		private string _ilce_adi;
		
		private int _ilId;
		
		private EntityRef<iller> _iller;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnilceIdChanging(int value);
    partial void OnilceIdChanged();
    partial void Onilce_adiChanging(string value);
    partial void Onilce_adiChanged();
    partial void OnilIdChanging(int value);
    partial void OnilIdChanged();
    #endregion
		
		public ilceler()
		{
			this._iller = default(EntityRef<iller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ilceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ilceId
		{
			get
			{
				return this._ilceId;
			}
			set
			{
				if ((this._ilceId != value))
				{
					this.OnilceIdChanging(value);
					this.SendPropertyChanging();
					this._ilceId = value;
					this.SendPropertyChanged("ilceId");
					this.OnilceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ilce_adi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ilce_adi
		{
			get
			{
				return this._ilce_adi;
			}
			set
			{
				if ((this._ilce_adi != value))
				{
					this.Onilce_adiChanging(value);
					this.SendPropertyChanging();
					this._ilce_adi = value;
					this.SendPropertyChanged("ilce_adi");
					this.Onilce_adiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ilId", DbType="Int NOT NULL")]
		public int ilId
		{
			get
			{
				return this._ilId;
			}
			set
			{
				if ((this._ilId != value))
				{
					if (this._iller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnilIdChanging(value);
					this.SendPropertyChanging();
					this._ilId = value;
					this.SendPropertyChanged("ilId");
					this.OnilIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iller_ilceler", Storage="_iller", ThisKey="ilId", OtherKey="ilId", IsForeignKey=true)]
		public iller iller
		{
			get
			{
				return this._iller.Entity;
			}
			set
			{
				iller previousValue = this._iller.Entity;
				if (((previousValue != value) 
							|| (this._iller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._iller.Entity = null;
						previousValue.ilcelers.Remove(this);
					}
					this._iller.Entity = value;
					if ((value != null))
					{
						value.ilcelers.Add(this);
						this._ilId = value.ilId;
					}
					else
					{
						this._ilId = default(int);
					}
					this.SendPropertyChanged("iller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.isimler")]
	public partial class isimler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ogrenci_id;
		
		private string _isim;
		
		private EntitySet<iliskiler> _iliskilers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onogrenci_idChanging(int value);
    partial void Onogrenci_idChanged();
    partial void OnisimChanging(string value);
    partial void OnisimChanged();
    #endregion
		
		public isimler()
		{
			this._iliskilers = new EntitySet<iliskiler>(new Action<iliskiler>(this.attach_iliskilers), new Action<iliskiler>(this.detach_iliskilers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ogrenci_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ogrenci_id
		{
			get
			{
				return this._ogrenci_id;
			}
			set
			{
				if ((this._ogrenci_id != value))
				{
					this.Onogrenci_idChanging(value);
					this.SendPropertyChanging();
					this._ogrenci_id = value;
					this.SendPropertyChanged("ogrenci_id");
					this.Onogrenci_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isim", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string isim
		{
			get
			{
				return this._isim;
			}
			set
			{
				if ((this._isim != value))
				{
					this.OnisimChanging(value);
					this.SendPropertyChanging();
					this._isim = value;
					this.SendPropertyChanged("isim");
					this.OnisimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="isimler_iliskiler", Storage="_iliskilers", ThisKey="ogrenci_id", OtherKey="ogrenci_id")]
		public EntitySet<iliskiler> iliskilers
		{
			get
			{
				return this._iliskilers;
			}
			set
			{
				this._iliskilers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_iliskilers(iliskiler entity)
		{
			this.SendPropertyChanging();
			entity.isimler = this;
		}
		
		private void detach_iliskilers(iliskiler entity)
		{
			this.SendPropertyChanging();
			entity.isimler = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dersler")]
	public partial class dersler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ders_id;
		
		private string _ders_adi;
		
		private EntitySet<iliskiler> _iliskilers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onders_idChanging(int value);
    partial void Onders_idChanged();
    partial void Onders_adiChanging(string value);
    partial void Onders_adiChanged();
    #endregion
		
		public dersler()
		{
			this._iliskilers = new EntitySet<iliskiler>(new Action<iliskiler>(this.attach_iliskilers), new Action<iliskiler>(this.detach_iliskilers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ders_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ders_id
		{
			get
			{
				return this._ders_id;
			}
			set
			{
				if ((this._ders_id != value))
				{
					this.Onders_idChanging(value);
					this.SendPropertyChanging();
					this._ders_id = value;
					this.SendPropertyChanged("ders_id");
					this.Onders_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ders_adi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ders_adi
		{
			get
			{
				return this._ders_adi;
			}
			set
			{
				if ((this._ders_adi != value))
				{
					this.Onders_adiChanging(value);
					this.SendPropertyChanging();
					this._ders_adi = value;
					this.SendPropertyChanged("ders_adi");
					this.Onders_adiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dersler_iliskiler", Storage="_iliskilers", ThisKey="ders_id", OtherKey="ders_id")]
		public EntitySet<iliskiler> iliskilers
		{
			get
			{
				return this._iliskilers;
			}
			set
			{
				this._iliskilers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_iliskilers(iliskiler entity)
		{
			this.SendPropertyChanging();
			entity.dersler = this;
		}
		
		private void detach_iliskilers(iliskiler entity)
		{
			this.SendPropertyChanging();
			entity.dersler = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.iliskiler")]
	public partial class iliskiler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _ogrenci_id;
		
		private int _ders_id;
		
		private EntityRef<dersler> _dersler;
		
		private EntityRef<isimler> _isimler;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onogrenci_idChanging(int value);
    partial void Onogrenci_idChanged();
    partial void Onders_idChanging(int value);
    partial void Onders_idChanged();
    #endregion
		
		public iliskiler()
		{
			this._dersler = default(EntityRef<dersler>);
			this._isimler = default(EntityRef<isimler>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ogrenci_id", DbType="Int NOT NULL")]
		public int ogrenci_id
		{
			get
			{
				return this._ogrenci_id;
			}
			set
			{
				if ((this._ogrenci_id != value))
				{
					if (this._isimler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onogrenci_idChanging(value);
					this.SendPropertyChanging();
					this._ogrenci_id = value;
					this.SendPropertyChanged("ogrenci_id");
					this.Onogrenci_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ders_id", DbType="Int NOT NULL")]
		public int ders_id
		{
			get
			{
				return this._ders_id;
			}
			set
			{
				if ((this._ders_id != value))
				{
					if (this._dersler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onders_idChanging(value);
					this.SendPropertyChanging();
					this._ders_id = value;
					this.SendPropertyChanged("ders_id");
					this.Onders_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dersler_iliskiler", Storage="_dersler", ThisKey="ders_id", OtherKey="ders_id", IsForeignKey=true)]
		public dersler dersler
		{
			get
			{
				return this._dersler.Entity;
			}
			set
			{
				dersler previousValue = this._dersler.Entity;
				if (((previousValue != value) 
							|| (this._dersler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dersler.Entity = null;
						previousValue.iliskilers.Remove(this);
					}
					this._dersler.Entity = value;
					if ((value != null))
					{
						value.iliskilers.Add(this);
						this._ders_id = value.ders_id;
					}
					else
					{
						this._ders_id = default(int);
					}
					this.SendPropertyChanged("dersler");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="isimler_iliskiler", Storage="_isimler", ThisKey="ogrenci_id", OtherKey="ogrenci_id", IsForeignKey=true)]
		public isimler isimler
		{
			get
			{
				return this._isimler.Entity;
			}
			set
			{
				isimler previousValue = this._isimler.Entity;
				if (((previousValue != value) 
							|| (this._isimler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._isimler.Entity = null;
						previousValue.iliskilers.Remove(this);
					}
					this._isimler.Entity = value;
					if ((value != null))
					{
						value.iliskilers.Add(this);
						this._ogrenci_id = value.ogrenci_id;
					}
					else
					{
						this._ogrenci_id = default(int);
					}
					this.SendPropertyChanged("isimler");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
